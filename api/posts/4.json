{"total":39,"pageSize":10,"pageCount":4,"data":[{"title":"Android 异常退出的生命周期分析","slug":"Android-exception-exit","date":"2016-04-25T11:02:33.000Z","updated":"2017-12-17T15:34:24.000Z","comments":true,"path":"api/articles/Android-exception-exit.json","excerpt":"<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a><strong>概述：</strong></h2><p>典型的Activity 生命周期众所周知，就不用多说了吧；我们知道，Activity除了受用户操作所导致的正常的生命周期方法调度，还有一些异常情况，比如当资源相关的系统配置发生了改变以及系统内存不足时，Activity就可能被杀死，下面就来具体分析这两种情况。<br>","keywords":null,"cover":"http://img.blog.csdn.net/20160425154234928","content":null,"text":"概述：典型的Activity 生命周期众所周知，就不用多说了吧；我们知道，Activity除了受用户操作所导致的正常的生命周期方法调度，还有一些异常情况，比如当资源相关的系统配置发生了改变以及系统内存不足时，Activity就可能被杀死，下面就来具体分析这两种情况。<br>情况一","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"}]},{"title":"Android TextView 实现文字间距","slug":"android-spacingtextview","date":"2016-04-18T08:35:00.000Z","updated":"2017-12-17T15:53:09.000Z","comments":true,"path":"api/articles/android-spacingtextview.json","excerpt":"<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a><strong>概述：</strong></h2><p>Android系统中TextView默认显示中文时会比较紧凑，不是很美观。为了让每行保持一定的行间距，可以设置属性android:lineSpacingExtra或android:lineSpacingMultiplier。<br>但是有时候我们需要在TextView的文本之间有间距，两个字的话，我们可以在xml文件中，用敲空格的方式来实现，如果有很多文本或者是一个变量的文本呢。我们还这样用敲空格的方式来实现吗？oh no~！<br>如何实现行间距和文本间距呢？（请往下看 ↓）。</p>\n<h4 id=\"1、设置TextView的行间距\"><a href=\"#1、设置TextView的行间距\" class=\"headerlink\" title=\"1、设置TextView的行间距\"></a>1、设置TextView的行间距</h4><p>在TextView控件中添加属性：<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">android:</span>lineSpacingExtra=<span class=\"string\">\"13dp\"</span>   <span class=\"comment\">//设置行间距</span></span><br><span class=\"line\"><span class=\"symbol\">android:</span>lineSpacingMultiplier=<span class=\"string\">\"1.2\"</span>  <span class=\"comment\">//设置行间距的倍数。如”1.2”</span></span><br></pre></td></tr></table></figure></p>","keywords":null,"cover":"http://img.blog.csdn.net/20160311173839446","content":null,"text":"概述：Android系统中TextView默认显示中文时会比较紧凑，不是很美观。为了让每行保持一定的行间距，可以设置属性android:lineSpacingExtra或android:lineSpacingMultiplier。<br>但是有时候我们需要在TextView的文本","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"},{"name":"TextView","slug":"TextView","count":1,"path":"api/tags/TextView.json"}]},{"title":"Android 中线程池的分析","slug":"Android 中线程池的分析","date":"2016-04-15T08:25:24.000Z","updated":"2017-12-17T15:30:56.000Z","comments":true,"path":"api/articles/Android 中线程池的分析.json","excerpt":"<p><strong>介绍new Thread的弊端及Java四种线程池的使用，对Android同样适用。</strong></p>\n<h3 id=\"1、new-Thread的弊端\"><a href=\"#1、new-Thread的弊端\" class=\"headerlink\" title=\"1、new Thread的弊端\"></a><strong>1、new Thread的弊端</strong></h3><p>执行一个异步任务你还只是如下new Thread吗？</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">).start();</span><br></pre></td></tr></table></figure>","keywords":null,"cover":null,"content":null,"text":"介绍new Thread的弊端及Java四种线程池的使用，对Android同样适用。1、new Thread的弊端执行一个异步任务你还只是如下new Thread吗？1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br><br>new Thre","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"},{"name":"线程池","slug":"线程池","count":1,"path":"api/tags/线程池.json"},{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"}]},{"title":"Android 网络请求库Retrofit简单使用","slug":"android-retrofit","date":"2016-04-12T08:20:24.000Z","updated":"2017-12-17T15:41:57.000Z","comments":true,"path":"api/articles/android-retrofit.json","excerpt":"<h2 id=\"什么是-Retrofit\"><a href=\"#什么是-Retrofit\" class=\"headerlink\" title=\"什么是 Retrofit ?\"></a><strong>什么是 Retrofit ?</strong></h2><p>Retrofit是一套 RESTful 架构的 Android（Java）客户端实现，基于注解，提供 JSON to POJO（Plain Ordinary Java Object ，简单Java对象），POJO to JSON，网络请求（POST，GET， PUT，DELETE 等）封装。</p>","keywords":null,"cover":"http://img.blog.csdn.net/20160408133309596","content":null,"text":"什么是 Retrofit ?Retrofit是一套 RESTful 架构的 Android（Java）客户端实现，基于注解，提供 JSON to POJO（Plain Ordinary Java Object ，简单Java对象），POJO to JSON，网络请求（POST，G","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"},{"name":"Retrofit","slug":"Retrofit","count":1,"path":"api/tags/Retrofit.json"}]},{"title":"Android 切换系统语言功能实现（下）","slug":"android-change-language_02","date":"2016-04-12T04:05:24.000Z","updated":"2017-12-17T15:32:36.000Z","comments":true,"path":"api/articles/android-change-language_02.json","excerpt":"<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a><strong>概述：</strong></h2><p>简单介绍下这个需求的缘由，这段时间因公司业务需要，其中有一项“设置系统语言”功能，就是在使用APP的过程中，动态的去切换整个Android机器的语言，具体参照手机设置页面有语言切换功能。期初想来是很简单的事情嘛，不就是个简单的资源国际化嘛，strings.xml资源文件一整还不给OK？真正动起手来就真不是这么一回事了，国际化是没问题，但是怎样能更改所有页面的文字资源呢，这是一个问题。下面介绍下网上找的几个方案。</p>\n<h4 id=\"一、API欺骗\"><a href=\"#一、API欺骗\" class=\"headerlink\" title=\"一、API欺骗\"></a>一、API欺骗</h4><p>   烧制到手机中的android.jar包含了Android所需的各种类与方法；而供开发者使用的android.jar只是其中的一部分。API欺骗是指在应用中去模拟未公开的类和方法让应用编译通过并生成APK，然而在应用实际运行中调用的却仍是烧制到手机中真实的android.jar。<br>","keywords":null,"cover":null,"content":null,"text":"概述：简单介绍下这个需求的缘由，这段时间因公司业务需要，其中有一项“设置系统语言”功能，就是在使用APP的过程中，动态的去切换整个Android机器的语言，具体参照手机设置页面有语言切换功能。期初想来是很简单的事情嘛，不就是个简单的资源国际化嘛，strings.xml资源文件一整","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"}]},{"title":"Android 切换系统语言源码分析（上）","slug":"android-change-language_01","date":"2016-04-12T04:05:24.000Z","updated":"2017-12-17T15:32:46.000Z","comments":true,"path":"api/articles/android-change-language_01.json","excerpt":"<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a><strong>概述：</strong></h2><p>以前了解Android的多语言实现很简单，可以在不同的语言环境下使用不同的资源，就做好相应的语言适配就好，但是一直没有实际使用过。 最近公司的项目要用到多国语言切换，并且还是和手机上系统设置里面的语言切换功能一样，于是就上网查了下资料。一般都是在应用类实现多国语言切换，这个是很简单。而我想切换整个系统的语言。由于谷歌没有把系统设置里面的接口给开放出来，所以就只好去查看它的源码了~<br>","keywords":null,"cover":null,"content":null,"text":"概述：以前了解Android的多语言实现很简单，可以在不同的语言环境下使用不同的资源，就做好相应的语言适配就好，但是一直没有实际使用过。 最近公司的项目要用到多国语言切换，并且还是和手机上系统设置里面的语言切换功能一样，于是就上网查了下资料。一般都是在应用类实现多国语言切换，这个","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"}]},{"title":"Android 5.1 Settings源码简要分析","slug":"android-5.1-settings","date":"2016-04-11T09:05:24.000Z","updated":"2017-12-17T15:43:44.000Z","comments":true,"path":"api/articles/android-5.1-settings.json","excerpt":"<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a><strong>概述：</strong></h2><p><strong>先声明：</strong>本人工作快两年了，仍是菜鸟级别的，惭愧啊！以前遇到好多知识点都没有记录下来，感觉挺可惜的，现在有机会接触Android 源码。我们一个Android组的搞Setting，我觉得是得写得东西，毕竟才接触，现在只能看一段时间代码，就先记录下一些收获吧，说多了就是泪~本文主要针对L平台上Settings模块正常启动流程做一个简要分析，并试着分析一下Settings下面某选项的实现。<br>","keywords":null,"cover":"http://img.blog.csdn.net/20160329120918137","content":null,"text":"概述：先声明：本人工作快两年了，仍是菜鸟级别的，惭愧啊！以前遇到好多知识点都没有记录下来，感觉挺可惜的，现在有机会接触Android 源码。我们一个Android组的搞Setting，我觉得是得写得东西，毕竟才接触，现在只能看一段时间代码，就先记录下一些收获吧，说多了就是泪~本文","link":"","raw":null,"photos":[],"categories":[{"name":"Android","slug":"Android","count":11,"path":"api/categories/Android.json"}],"tags":[{"name":"Android","slug":"Android","count":11,"path":"api/tags/Android.json"}]},{"title":"Ubuntu 更改 Gun Make 版本","slug":"change-gun-make-code","date":"2016-04-10T04:35:12.000Z","updated":"2017-12-17T17:36:06.000Z","comments":true,"path":"api/articles/change-gun-make-code.json","excerpt":"<h3 id=\"1：Gun-Make-下载地址\"><a href=\"#1：Gun-Make-下载地址\" class=\"headerlink\" title=\"1：Gun Make 下载地址\"></a>1：Gun Make 下载地址</h3><p>ftp://ftp.gnu.org/gnu/make/</p>\n<h3 id=\"2：-下载并解压-make3-8-1-tar-gz\"><a href=\"#2：-下载并解压-make3-8-1-tar-gz\" class=\"headerlink\" title=\"2： 下载并解压 make3.8.1.tar.gz\"></a>2： 下载并解压 make3.8.1.tar.gz</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar -zxvf make3.<span class=\"number\">8.1</span><span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3：-编译Make\"><a href=\"#3：-编译Make\" class=\"headerlink\" title=\"3： 编译Make\"></a>3： 编译Make</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ./configure</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> make</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4：-安装Make\"><a href=\"#4：-安装Make\" class=\"headerlink\" title=\"4： 安装Make\"></a>4： 安装Make</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo make install</span></span><br></pre></td></tr></table></figure>","keywords":null,"cover":null,"content":null,"text":"1：Gun Make 下载地址ftp://ftp.gnu.org/gnu/make/2： 下载并解压 make3.8.1.tar.gz1<br>$ tar -zxvf make3.8.1.tar.gz<br>3： 编译Make1<br>2<br>$ ./configure<br>","link":"","raw":null,"photos":[],"categories":[{"name":"Ubuntu","slug":"Ubuntu","count":2,"path":"api/categories/Ubuntu.json"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","count":2,"path":"api/tags/Ubuntu.json"}]},{"title":"Ubuntu 15.10 下载Android5.1代码环境搭建","slug":"android-source-download","date":"2016-04-10T02:05:36.000Z","updated":"2017-12-17T16:14:16.000Z","comments":true,"path":"api/articles/android-source-download.json","excerpt":"<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a><strong>概述：</strong></h2><p>作为一个Android开发者，想要自己提升一个阶段，想深入了解 Android 相关的知识，Activity 是工作流程是怎样的？ View 是怎样绘制的？ 怎样修改一些系统相关的应用？等等，就得要深入Android 源代码~所以就要先获取Android源码：</p>\n<h3 id=\"准备工作：\"><a href=\"#准备工作：\" class=\"headerlink\" title=\"准备工作：\"></a>准备工作：</h3><ol>\n<li>装一个Ubuntu系统（<a href=\"http://www.ubuntu.com/download/desktop）电脑的内存最好有\" target=\"_blank\" rel=\"noopener\">http://www.ubuntu.com/download/desktop）电脑的内存最好有</a> 8 G，因为编译 Android 源码很吃电脑内存，特别是在 4.4 以后的版本，电脑内存大点，比较保险，编译一次源码要好几个小时，要因为内存原因，太让人郁闷了。<br>ps:( ubuntu装完后把系统软件全都更新一下)</li>\n<li><p>一个翻墙vpn（<a href=\"https://www.trueyt.com/）\" target=\"_blank\" rel=\"noopener\">https://www.trueyt.com/）</a></p>","keywords":null,"cover":"http://img.blog.csdn.net/20160325114724525","content":null,"text":"概述：作为一个Android开发者，想要自己提升一个阶段，想深入了解 Android 相关的知识，Activity 是工作流程是怎样的？ View 是怎样绘制的？ 怎样修改一些系统相关的应用？等等，就得要深入Android 源代码~所以就要先获取Android源码：准备工作：装一","link":"","raw":null,"photos":[],"categories":[{"name":"Ubuntu","slug":"Ubuntu","count":2,"path":"api/categories/Ubuntu.json"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","count":2,"path":"api/tags/Ubuntu.json"},{"name":"AOSP","slug":"AOSP","count":1,"path":"api/tags/AOSP.json"}]}]}