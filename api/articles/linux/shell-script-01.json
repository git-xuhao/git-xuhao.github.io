{"title":"Shell 脚本基础学习（一）","slug":"linux/shell-script-01","date":"2016-09-29T05:06:31.000Z","updated":"2017-12-17T16:07:38.000Z","comments":true,"path":"api/articles/linux/shell-script-01.json","photos":[],"link":"","excerpt":"前言Linux shell 脚本基础我们将分几篇文章来记录，希望对我们这些初次接触Linxu shell脚本编程的初学者有帮助；<br>Linxu shell 脚本基础学习先来介绍shell的语法，开头、注释、变量和环境，虽然不涉及到具体的东西，但是大号基础是以后学习的前提，很多时候我们拿到别人的开源库，需要编译使用，但是由于各种原因，总是编译不成功，其中就有shell 脚本，如果我们看不懂别人的脚本，编译出错，还查不来原因。（比如一个空格导致编译失败，你能查出原因么？）<br>","covers":null,"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Linux shell 脚本基础我们将分几篇文章来记录，希望对我们这些初次接触Linxu shell脚本编程的初学者有帮助；<br>Linxu shell 脚本基础学习先来介绍shell的语法，开头、注释、变量和环境，虽然不涉及到具体的东西，但是大号基础是以后学习的前提，很多时候我们拿到别人的开源库，需要编译使用，但是由于各种原因，总是编译不成功，其中就有shell 脚本，如果我们看不懂别人的脚本，编译出错，还查不来原因。（比如一个空格导致编译失败，你能查出原因么？）<br><a id=\"more\"></a></p>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><h3 id=\"1-Linux-脚本编写基础\"><a href=\"#1-Linux-脚本编写基础\" class=\"headerlink\" title=\"1.Linux 脚本编写基础\"></a>1.Linux 脚本编写基础</h3><h4 id=\"1-1-语法的基本介绍\"><a href=\"#1-1-语法的基本介绍\" class=\"headerlink\" title=\"1.1 语法的基本介绍\"></a>1.1 语法的基本介绍</h4><h5 id=\"1-1-1-开头\"><a href=\"#1-1-1-开头\" class=\"headerlink\" title=\"1.1.1 开头\"></a><strong>1.1.1 开头</strong></h5><p>程序必须以下面的行开始（必须放在文件的第一行）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br></pre></td></tr></table></figure>\n<p>符号”#!”用来告诉系统它后面的参数是用来执行该文件的程序。在这个例子中我们使用/bin/sh来执行程序。<br>当编辑好脚本时，如果要执行该脚本，还必须使其可执行。<br>要使脚本可执行：<br>编译 chmod  u+x filename 这样才能用./filename 来运行</p>\n<h5 id=\"1-1-2-注释\"><a href=\"#1-1-2-注释\" class=\"headerlink\" title=\"1.1.2 注释\"></a><strong>1.1.2 注释</strong></h5><p>在进行shell编程时，以#开头的句子表示注释，直到这一行的结束。我们真诚地建议您在程序中使用注释。<br>如果您使用了注释，那么即使相当长的时间内没有使用该脚本，您也能在很短的时间内明白该脚本的作用及工作原理。</p>\n<h5 id=\"1-1-3-变量\"><a href=\"#1-1-3-变量\" class=\"headerlink\" title=\"1.1.3 变量\"></a><strong>1.1.3 变量</strong></h5><p>在其他编程语言中您必须使用变量。在shell编程中，所有的变量都由字符串组成，并且您不需要对变量进行声明。要赋值给一个变量，您可以这样写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">#对变量赋值：</span></span><br><span class=\"line\">a=<span class=\"string\">\"hello world\"</span></span><br><span class=\"line\"><span class=\"comment\"># 现在打印变量a的内容：</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"A is:\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br></pre></td></tr></table></figure>\n<p>有时候变量名很容易与其他文字混淆，比如：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">num</span>=2</span><br><span class=\"line\">echo <span class=\"string\">\"this is the <span class=\"variable\">$numnd</span>\"</span></span><br></pre></td></tr></table></figure></p>\n<p>这并不会打印出”this is the 2nd”，而仅仅打印”this is the “，因为shell会去搜索变量numnd的值，但是这个变量时没有值的。可以使用花括号来告诉shell我们要打印的是num变量：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">num</span>=2</span><br><span class=\"line\">echo <span class=\"string\">\"this is the <span class=\"variable\">$&#123;num&#125;</span>nd\"</span></span><br></pre></td></tr></table></figure></p>\n<p>这将打印： this is the 2nd</p>\n<h5 id=\"1-1-4-环境变量\"><a href=\"#1-1-4-环境变量\" class=\"headerlink\" title=\"1.1.4 环境变量\"></a><strong>1.1.4 环境变量</strong></h5><p>由export关键字处理过的变量叫做环境变量。我们不对环境变量进行讨论，因为通常情况下仅仅在登录脚本中使用环境变量。</p>\n<p>这一篇就介绍到这里，下面我们会接触到具体的Linux shell脚本基础的实质部分。</p>\n<hr>\n<h2 id=\"更多相关系列传送门：\"><a href=\"#更多相关系列传送门：\" class=\"headerlink\" title=\"更多相关系列传送门：\"></a>更多相关系列传送门：</h2><p><strong>【个人博客】shel 脚本系列</strong></p>\n<ul>\n<li><a href=\"http://xuhaoblog.com/linux/shell-script-01.html\">【Linux 系统编程】shell 脚本基础学习（一）</a></li>\n<li><a href=\"http://xuhaoblog.com/linux/shell-script-02.html\">【Linux 系统编程】shell 命令和流程控制（二）</a></li>\n<li><a href=\"http://xuhaoblog.com/linux/shell-script-03.html\">【Linux 系统编程】shell 流程控制loop和引号（三）</a></li>\n<li><a href=\"http://xuhaoblog.com/linux/shell-script-04.html\">【Linux 系统编程】shell 输入/输出重定向（四）</a></li>\n<li><a href=\"http://xuhaoblog.com/linux/shell-script-05.html\">【Linux 系统编程】shell 脚本基础学习之函数（五）</a></li>\n</ul>\n<blockquote>\n<p>本文由博主辛苦整理下来的笔记；<br>希望大家能够指点或提出宝贵意见，共同学习，谢谢！ </p>\n</blockquote>\n","categories":[{"name":"Shell","slug":"Shell","count":5,"path":"api/categories/Shell.json"}],"tags":[{"name":"Shell","slug":"Shell","count":5,"path":"api/tags/Shell.json"},{"name":"Linux","slug":"Linux","count":8,"path":"api/tags/Linux.json"}]}