{"title":"C语言（三）字符串处理函数","slug":"c/language/string","date":"2016-08-13T11:30:00.000Z","updated":"2017-12-18T16:00:43.000Z","comments":true,"path":"api/articles/c/language/string.json","photos":[],"link":"","excerpt":"C语言提供了丰富的字符串处理函数，例如字符串的输入、输出、合并、修改、比较、转换、复制、搜索等，使用这些现成的函数可大大减轻编程的负担。用于输入输出的字符串函数，例如printf、puts、scanf、gets等，使用时应包含头文件stdio.h，使用其它字符串函数则应包含头文件string.h。","covers":null,"content":"<p>C语言提供了丰富的字符串处理函数，例如字符串的输入、输出、合并、修改、比较、转换、复制、搜索等，使用这些现成的函数可大大减轻编程的负担。</p>\n<p>用于输入输出的字符串函数，例如printf、puts、scanf、gets等，使用时应包含头文件stdio.h，使用其它字符串函数则应包含头文件string.h。</p>\n<a id=\"more\"></a>\n<h3 id=\"1-字符串长度函数strlen\"><a href=\"#1-字符串长度函数strlen\" class=\"headerlink\" title=\"1.字符串长度函数strlen\"></a><strong>1.字符串长度函数strlen</strong></h3><p>strlen 是 string length 的缩写，用来获得字符串的长度。所谓长度，就是包含多少个字符（不包括字符串结束标志 ‘\\0’）。语法格式为：</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strlen(<span class=\"name\">arrayName</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>strlen 将返回字符串的长度，它是一个整数。请看下面的例子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str[]=<span class=\"string\">\"C language\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"built_in\">strlen</span>(str);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"The lenth of the string is %d\\n\"</span>, len);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The lenth <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"built_in\">string</span> <span class=\"keyword\">is</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<p>需要说明的是，strlen 会从字符串的第 0 个字符开始计算，直到遇到字符串结束标志 ‘\\0’。将上面代码中的 str 改为：</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> <span class=\"keyword\">str</span>[]=<span class=\"string\">\"C \\0language\"</span>;</span><br></pre></td></tr></table></figure>\n<p>那么输出结果就是：<br><strong>The lenth of the string is 2</strong></p>\n<h3 id=\"2-字符串连接函数-strcat\"><a href=\"#2-字符串连接函数-strcat\" class=\"headerlink\" title=\"2.字符串连接函数 strcat\"></a><strong>2.字符串连接函数 strcat</strong></h3><p>strcat 是 string catenate 的缩写，意思是把两个字符串拼接在一起，语法格式为：</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strcat(<span class=\"name\">arrayName1</span>, arrayName2)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>arrayName1、arrayName2 为需要拼接的字符串。</p>\n<p>strcat 将把 arrayName2 连接到 arrayName1 后面，并删去 arrayName1 最后的结束标志 ‘\\0’。<br><strong>这就意味着，arrayName1 的长度要足够，必须能够同时容纳 arrayName1 和 arrayName2，否则会越界。</strong></p>\n<p>strcat 返回值为 arrayName1 的首地址。请看下面的例子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str1[<span class=\"number\">40</span>]=<span class=\"string\">\"My name is \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str2[<span class=\"number\">20</span>];</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Input your name:\"</span>);</span><br><span class=\"line\">    gets(str2);</span><br><span class=\"line\">    <span class=\"built_in\">strcat</span>(str1,str2);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(str1);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input your <span class=\"built_in\">name</span>: xuhao</span><br><span class=\"line\">My <span class=\"built_in\">name</span> <span class=\"keyword\">is</span> xuhao</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-字符串复制函数strcpy\"><a href=\"#3-字符串复制函数strcpy\" class=\"headerlink\" title=\"3.字符串复制函数strcpy\"></a><strong>3.字符串复制函数strcpy</strong></h3><p>strcpy 是 string copy 的缩写，意思是字符串复制，语法格式为：</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strcpy(<span class=\"name\">arrayName1</span>, arrayName2)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>strcpy 会把 arrayName2 中的字符串拷贝到 arrayName1 中，串结束标志 ‘\\0’ 也一同拷贝。请看下面的例子：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> str1[<span class=\"number\">15</span>], str2[]=<span class=\"string\">\"C Language\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(str1, str2);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(str1);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<p><strong>C Language</strong></p>\n<p>strcat 要求 arrayName1 要有足够的长度，否则不能全部装入所拷贝的字符串。</p>\n<h3 id=\"4-字符串比较函数strcmp\"><a href=\"#4-字符串比较函数strcmp\" class=\"headerlink\" title=\"4.字符串比较函数strcmp\"></a><strong>4.字符串比较函数strcmp</strong></h3><p>strcmp 是 string compare 的缩写，意思是字符串比较，语法格式为：</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strcmp(<span class=\"name\">arrayName1</span>, arrayName2)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>arrayName1 和 arrayName2 是需要比较的两个字符串。</p>\n<p>字符本身没有大小之分，strcmp() 是以各个字符在ASCII 码表上对应的数值进行比较的。strcmp() 首先将 arrayName1 中第0个字符的 ASCII 码值减去 arrayName2 中第0个字符的 ASCII 码值，若差值为 0，则说明两个字符相同，再继续比较下个字符，若差值不为 0 则将差值返回。例如字符串”Ac”和”ba”比较则会返回字符”A”(65)和’b’(98)的差值(－33)。</p>\n<p>返回值：若 arrayName1 和 arrayName2 相同，则返回0；若 arrayName1 大于 arrayName2，则返回大于 0 的值；若 arrayName1 小于 arrayName2，则返回小于0 的值。</p>\n<p>下面对4组字符串进行比较。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\">main()&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *a = <span class=\"string\">\"AaBbCc\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *b = <span class=\"string\">\"AbCdEf\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *c = <span class=\"string\">\"aacdef\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *d = <span class=\"string\">\"AaBbCc\"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"strcmp(a, b) : %d\\n\"</span>, <span class=\"built_in\">strcmp</span>(a, b));</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"strcmp(a, c) : %d\\n\"</span>, <span class=\"built_in\">strcmp</span>(a, c));</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"strcmp(a, d) : %d\\n\"</span>, <span class=\"built_in\">strcmp</span>(a, d));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tgetchar();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">strcmp</span><span class=\"params\">(a, b)</span></span> : -<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">strcmp</span><span class=\"params\">(a, c)</span></span> : -<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">strcmp</span><span class=\"params\">(a, d)</span></span> : <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<p>CSDN</p>\n<h3 id=\"更多系列相关文章传送门：\"><a href=\"#更多系列相关文章传送门：\" class=\"headerlink\" title=\"更多系列相关文章传送门：\"></a>更多系列相关文章传送门：</h3><p><a href=\"http://blog.csdn.net/u011974987/article/details/52138798\" target=\"_blank\" rel=\"noopener\">C语言（一）基本数据类型</a><br><a href=\"http://blog.csdn.net/u011974987/article/details/52142794\" target=\"_blank\" rel=\"noopener\">C语言（二）有符号数和无符号数的理解</a><br><a href=\"http://blog.csdn.net/u011974987/article/details/52200178\" target=\"_blank\" rel=\"noopener\">C语言（三）字符串处理函数</a><br><a href=\"http://blog.csdn.net/u011974987/article/details/52270018\" target=\"_blank\" rel=\"noopener\">C语言（四）指针概念的理解</a><br><a href=\"http://blog.csdn.net/u011974987/article/details/52290724\" target=\"_blank\" rel=\"noopener\">C语言（五）内存的分配与释放</a><br><a href=\"http://blog.csdn.net/u011974987/article/details/52305364\" target=\"_blank\" rel=\"noopener\">C语言（六）结构体和联合体</a><br><a href=\"http://blog.csdn.net/u011974987/article/details/52354074\" target=\"_blank\" rel=\"noopener\">C语言（七）文件的相关操作</a></p>\n<blockquote>\n<p>学习理解并整理下来的笔记。<br>希望大家能够指点或提出宝贵意见，谢谢！一起学习。</p>\n</blockquote>\n","categories":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/categories/C-C.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":10,"path":"api/tags/C-C.json"}]}